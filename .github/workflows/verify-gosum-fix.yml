# =======================================================
# Go.sum Fix Verification - 最終確認用
# =======================================================

name: "✅ Verify Go.sum Fix"

on:
  push:
    branches: [hotfix/go-sum-final-fix]
  workflow_dispatch:

env:
  GO_VERSION: "1.23"

jobs:
  verify-backend:
    name: "✅ Backend Cache & Dependencies"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test-type: ["unit", "integration", "contract"]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_test_password
          MYSQL_DATABASE: money_management_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v4

      - name: "Setup Go"
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: "✅ Verify Files"
        run: |
          echo "🔍 Verifying go.sum file exists..."
          if [ -f "backend/go.sum" ]; then
            echo "✅ backend/go.sum EXISTS ($(wc -l < backend/go.sum) lines)"
          else
            echo "❌ backend/go.sum MISSING"
            exit 1
          fi

      - name: "Cache Go Modules"
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ matrix.test-type }}-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ matrix.test-type }}-
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-
            ${{ runner.os }}-go-

      - name: "Download Go Dependencies"
        working-directory: backend
        run: |
          echo "📦 Go依存関係をダウンロード中..."
          go mod download
          go mod tidy
          echo "✅ Dependencies downloaded successfully"

      - name: "Wait for MySQL"
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -P 3306 -u root -proot_test_password --silent; then
              echo "✅ MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL... ($i/30)"
            sleep 2
          done

      - name: "Run Quick Test"
        working-directory: backend
        env:
          JWT_SECRET: "test-jwt-secret-for-testing-purposes-32chars"
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_NAME: money_management_test
          DB_USER: root
          DB_PASSWORD: root_test_password
        run: |
          echo "🧪 Running quick verification test..."
          if [ "${{ matrix.test-type }}" = "unit" ]; then
            go test -v -short ./internal/config
          elif [ "${{ matrix.test-type }}" = "integration" ]; then
            go test -v -short ./internal/database -run "TestSetupTestDB"
          else
            echo "✅ Contract test verification skipped for speed"
          fi
          echo "✅ Test completed successfully"
